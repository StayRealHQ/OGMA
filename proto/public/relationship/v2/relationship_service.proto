syntax = "proto3";
package public.relationship.v2;

import "public/models/v2/pagination_response.proto";
import "public/models/v2/pagination_request.proto";
import "public/models/v2/known_entities.proto";
import "public/models/v2/page_metadata.proto";
import "public/models/v2/relationship.proto";
import "public/models/v2/graph_type.proto";
import "public/models/v2/entities.proto";
import "public/models/v2/error.proto";

message CreateRelationshipRequest {
  string target_id = 1;
  public.models.v2.GraphType graph_type = 2;
}

message CreateRelationshipResponse {

}

message DeleteRelationshipRequest {
  string target_id = 1;
  public.models.v2.GraphType graph_type = 2;
}

message DeleteRelationshipResponse {

}

message GetUserRelationshipsRequest {
  repeated string target_ids = 1;
  repeated public.models.v2.GraphType graph_types = 2;
}

message GetUserRelationshipsResponse {
  repeated public.models.v2.Relationship relationships = 1;
  public.models.v2.Entities entities = 2;
  public.models.v2.PageMetadata page_metadata = 3;
  repeated public.models.v2.Error errors = 4;
}

message ListRelationshipsRequest {
  message Data {
    enum Type {
      TYPE_UNSPECIFIED = 0;
      TYPE_FOLLOWERS = 1;
      TYPE_FOLLOWINGS = 2;
      TYPE_FRIENDS = 3;
      TYPE_FRIEND_REQUESTS = 4;
      TYPE_FRIEND_REQUESTS_RECEIVED = 5;
    }

    Type type = 1;
    public.models.v2.PaginationRequest pagination = 2;
  }

  repeated Data data = 1;
  public.models.v2.KnownEntities known_entities = 2;
}

message ListRelationshipsResponse {
  message Relationship {
    repeated public.models.v2.Relationship relationships = 1;
    public.models.v2.PaginationResponse pagination = 2;
  }

  public.models.v2.Entities entities = 1;
  repeated public.models.v2.Error errors = 2;
  Relationship followings = 3;
  Relationship followers = 4;
  Relationship friends = 5;
  Relationship friend_requests = 6;
}

service RelationshipService {
  rpc CreateRelationship (CreateRelationshipRequest) returns (CreateRelationshipResponse);
  rpc DeleteRelationship (DeleteRelationshipRequest) returns (DeleteRelationshipResponse);
  rpc GetUserRelationships (GetUserRelationshipsRequest) returns (GetUserRelationshipsResponse);
  rpc ListRelationships (ListRelationshipsRequest) returns (ListRelationshipsResponse);
}
